<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.2">
  <zoom_level>3</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>417</x>
      <y>243</y>
      <w>102</w>
      <h>51</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/Collection/
--
+ add( element: void* ): Boolean
+ addAll( collection: Collection* ): uint32_t
+ iterator( ): Iterator*
+ size( ): uint32_t
+ reset( ): void
+ isEmpty( ): Boolean
+ addCapacity( capacity: uint32_t ): uint32_t
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>186</x>
      <y>339</y>
      <w>156</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>Queue
--
--
+ insert( element: void* ): Boolean
+ remove( ): void*
+ peek( ): void*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>261</x>
      <y>291</y>
      <w>177</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>570.0;10.0;570.0;80.0;10.0;80.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>594</x>
      <y>336</y>
      <w>150</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>Stack
--
--
+ push( element: void* ): Boolean
+ pop( ): void*
+ peek( ): void*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>501</x>
      <y>291</y>
      <w>174</w>
      <h>51</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0;560.0;80.0;560.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>390</x>
      <y>339</y>
      <w>153</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>Deque
--
--
+ pushTop( element: void* ): Boolean
+ pushBottom( element: vodi* ): Boolean
+ popTop( ): void*
+ popBottom( ): void*
+ peekTop( ): void*
+ peekBottom( ): void*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>465</x>
      <y>291</y>
      <w>9</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>537</x>
      <y>489</y>
      <w>90</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0;280.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>363</x>
      <y>741</y>
      <w>111</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>Dictionary
--
buckets: Vector&lt;HashNode&gt;
size: uint32_t
allocator: Allocator*
--
+ HashTable( size: uint32_t, allocator: Allocator* )
- hash( key: uint32_t ): uint32_t
+ add( key: uint32_t, element: void* ): Boolean
+ replace( key: uint32_t, element: void* ): void*
+ lookUp( key: uint32_t ): void*
+ remove( key: uint32_t ): void*
+ keyOf( element: void* ): uint32_t
+ removeElement( element: void* ): Boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>339</x>
      <y>855</y>
      <w>150</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>Vector
--
allocator: Allocator*
elements: void**
size: uint32_t
maxSize: uint32_t
--
+ ArrayList( size: uint32_t, maxSize: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>633</x>
      <y>546</y>
      <w>135</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>CircularLinkedStack
--
--
+ CircularLinkedStack( size: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>123</x>
      <y>495</y>
      <w>132</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>CircularLinkedQueue
--
--
+ CircularLinkedQueue( size: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>699</x>
      <y>519</y>
      <w>9</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>186</x>
      <y>477</y>
      <w>9</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>405</x>
      <y>663</y>
      <w>123</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>/List/
--
--
+ add( index: uint32_t, element: void* ): Boolean
+ replace( index: uint32_t, element: void* ): void*
+ contains( element: void* ): Boolean
+ containsAll( collection: Collection* ): Boolean
+ removeAll( collection: Collection* ): uint32_t
+ retainAll( collection: Collection* ): uint32_t
+ get( index: uint32_t ): void*
+ indexOf( element: void*, index: uint32_t* ): Boolean
+ remove( index: uint32_t ): void*
+ removeElement( element: void* ): Boolean
+ subList( from: uint32_t, to: uint32_t ): List*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>462</x>
      <y>255</y>
      <w>426</w>
      <h>414</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>190.0;10.0;1400.0;10.0;1400.0;1250.0;10.0;1250.0;10.0;1360.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>504</x>
      <y>855</y>
      <w>150</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>LinkedList
--
tail: LinkedListNode*
head: LinkedListNode*
size: uint32_t
maxSize: uint32_t
allocator: Allocator*
--
+ LinkedList( size: uint32_t, maxSize: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>57</x>
      <y>252</y>
      <w>75</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Iterator
--
+ reset( ): void
+ next( ): void*
+ hasNext( ): Boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>129</x>
      <y>264</y>
      <w>294</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt; creates</panel_attributes>
    <additional_attributes>10.0;20.0;960.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>429</x>
      <y>723</y>
      <w>60</w>
      <h>138</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>180.0;10.0;180.0;320.0;10.0;320.0;10.0;440.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>495</x>
      <y>723</y>
      <w>93</w>
      <h>138</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;270.0;290.0;270.0;290.0;440.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>138</x>
      <y>378</y>
      <w>111</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>SynchronousQueue
--
queue: Queue*
--
+ SynchronousQueue( queue: Queue* )
+ insert( element: void*, ms: uint32_t ): Boolean
+ remove( ms: uint32_t ): void*
+ peek( ms: uint32_t ): void*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>105</x>
      <y>435</y>
      <w>168</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>LinkedQueue
--
head: LinkedListNode*
tail: LinkedListNode*
absoluteTop: LinkedListNode*
size: uint32_t
limitSize: uint32_t
allocator: Allocator*
--
+ LinkedQueue( initialSize: uint32_t, limitSize: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>186</x>
      <y>363</y>
      <w>84</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>260.0;10.0;260.0;200.0;10.0;200.0;10.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>192</x>
      <y>363</y>
      <w>9</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>621</x>
      <y>480</y>
      <w>168</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>LinkedStack
--
head: LinkedListNode*
tail: LinkedListNode*
size: uint32_t
limitSize: uint32_t
allocator: Allocator*
--
+ LinkedStack( initialSize: uint32_t, limitSize: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>723</x>
      <y>387</y>
      <w>111</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>SynchronousStack
--
stack: Stack*
--
+ SynchronousStack( stack: Stack* )
+ push( element: void*, ms: uint32_t ): Boolean
+ pop( ms: uint32_t ): void*
+ peek( ms: uint32_t ): void*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>717</x>
      <y>360</y>
      <w>69</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;210.0;40.0;210.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>702</x>
      <y>360</y>
      <w>9</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;400.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>390</x>
      <y>396</y>
      <w>120</w>
      <h>51</h>
    </coordinates>
    <panel_attributes>SynchronousDeque
--
deque: Deque*
--
+ SynchronousDeque( deque: Deque* )
+ pushTop( element: void*, ms: uint32_t ): Boolean
+ pushBottom( element: void*, ms: uint32_t ): Boolean
+ popTop( ms: uint32_t ): void*
+ popBottom( ms: uint32_t ): void*
+ peekTop( ms: uint32_t ): void*
+ peekBottom( ms: uint32_t ): void*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>444</x>
      <y>378</y>
      <w>9</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>390</x>
      <y>516</y>
      <w>168</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>LinkedDeque
--
head: LinkedListNode*
tail: LinkedListNode*
nodeStack: LinkedStack&lt;LinkedListNode&gt;
size: uint32_t
limitSize: uint32_t
allocator: Allocator*
--
+ LinkedDeque( initialSize: uint32_t, limitSize:uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>519</x>
      <y>378</y>
      <w>9</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;460.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>111</x>
      <y>351</y>
      <w>81</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>90.0;160.0;10.0;160.0;10.0;10.0;250.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>366</x>
      <y>357</y>
      <w>30</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>80.0;180.0;10.0;180.0;10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>741</x>
      <y>345</y>
      <w>117</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>310.0;180.0;370.0;180.0;370.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>543</x>
      <y>765</y>
      <w>72</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>SynchronousList
--
list: List*
--
+ SynchronousList( list: List* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>723</y>
      <w>81</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;250.0;60.0;250.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>525</x>
      <y>687</y>
      <w>135</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>300.0;290.0;430.0;290.0;430.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>393</x>
      <y>804</y>
      <w>15</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>345</x>
      <y>93</y>
      <w>111</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>LinkedListNode
--
element: void*
next: LinkedListNode*
previous: LinkedListNode*
--
+ LinkedListNode( )
+ getNext( ): LinkedListNode*
+ getPrevious( ): LinkedListNode*
+ getAt( depth: uint32_t ): LinkedListNode*
+ getLast( ): LinkedListNode*
+ getData( ): void*
+ setNext( next: LinkedListNode* ): void
+ setPrevious( previous: LinkedListNode* ): void
+ setData( data: void* ): void
+ isCircular( ): Boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>453</x>
      <y>195</y>
      <w>93</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>HashNode
--
key: uint32_t
--
+ getWithKey( key: uint32_t ): HashNode*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>399</x>
      <y>165</y>
      <w>105</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;330.0;60.0;330.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>186</x>
      <y>534</y>
      <w>171</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>ArrayQueue
--
queueContainer: void**
size: uint32_t
head: uint32_t
tail: uint32_t
limitSize: uint32_t
allocator: Allocator*
--
+ ArrayQueue( initializeSize: uint32_t, limitSize: uint32_t allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>267</x>
      <y>363</y>
      <w>48</w>
      <h>177</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>140.0;10.0;140.0;540.0;10.0;540.0;10.0;570.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>204</x>
      <y>594</y>
      <w>132</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>CircularArrayQueue
--
--
+ CircularArrayQueue( size: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>267</x>
      <y>579</y>
      <w>9</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>552</x>
      <y>381</y>
      <w>144</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>LinkedStack
--
stackContainer: void**
head: uint32_t
tail: uint32_t
size: uint32_t
limitSize: uint32_t
allocator: Allocator*
--
+ ArrayStack( size: uint32_t, max: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>621</x>
      <y>360</y>
      <w>9</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>564</x>
      <y>438</y>
      <w>135</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>CircularArrayStack
--
--
+ CircularArrayStack( size: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>627</x>
      <y>423</y>
      <w>9</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>342</x>
      <y>471</y>
      <w>168</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>ArrayDeque
--
size: uint32_t
limitSize: uint32_t
allocator: Allocator*
--
+ ArrayDeque( initialSize: uint32_t, limitSize:uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>423</x>
      <y>378</y>
      <w>99</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;310.0;270.0;10.0;270.0;10.0;310.0</additional_attributes>
  </element>
</diagram>
