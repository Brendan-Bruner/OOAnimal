<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>720</x>
      <y>306</y>
      <w>204</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/Collection/
--
+ add( element: void* ): void
+ addAll( collection: Collection* ): uint32_t
+ iterator( ): Iterator*
+ size( ): uint32_t
+ reset( ): void
+ isEmpty( ): Boolean
+ addCapacity( capacity: uint32_t ): uint32_t
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>258</x>
      <y>498</y>
      <w>312</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>Queue
--
--
+ insert( element: void* ): Boolean
+ remove( ): void*
+ peek( ): void*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>408</x>
      <y>402</y>
      <w>354</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>570.0;10.0;570.0;80.0;10.0;80.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1074</x>
      <y>492</y>
      <w>300</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>Stack
--
--
+ push( element: void* ): Boolean
+ pop( ): void*
+ peek( ): void*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>888</x>
      <y>402</y>
      <w>348</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0;560.0;80.0;560.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>666</x>
      <y>498</y>
      <w>306</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Deque
--
--
+ pushTop( element: void* ): Boolean
+ pushBottom( element: vodi* ): Boolean
+ popTop( ): void*
+ popBottom( ): void*
+ peekTop( ): void*
+ peekBottom( ): void*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>816</x>
      <y>402</y>
      <w>18</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>960</x>
      <y>678</y>
      <w>66</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>582</x>
      <y>1152</y>
      <w>222</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>HashTable
--
buckets: ArrayList&lt;HashNode&gt;
size: uint32_t
allocator: Allocator*
--
+ HashTable( size: uint32_t, allocator: Allocator* )
- hash( key: uint32_t ): uint32_t</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>534</x>
      <y>1332</y>
      <w>300</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>ArrayList
--
allocator: Allocator*
elements: void**
size: uint32_t
maxSize: uint32_t
--
+ ArrayList( size: uint32_t, maxSize: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1038</x>
      <y>792</y>
      <w>270</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>CircularLinkedStack
--
--
+ CircularLinkedStack( size: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>348</x>
      <y>786</y>
      <w>264</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>CircularLinkedQueue
--
--
+ CircularLinkedQueue( size: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1170</x>
      <y>738</y>
      <w>18</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>474</x>
      <y>750</y>
      <w>18</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>666</x>
      <y>948</y>
      <w>246</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>/List/
--
--
+ add( index: uint32_t, element: void* ): void*
+ contains( element: void* ): Boolean
+ containsAll( collection: Collection* ): Boolean
+ removeAll( collection: Collection* ): uint32_t
+ retainAll( collection: Collection* ): uint32_t
+ get( index: uint32_t ): void*
+ indexOf( element: void*, index: uint32_t* ): Boolean
+ remove( index: uint32_t ): void*
+ removeElement( element: void* ): Boolean
+ subList( from: uint32_t, to: uint32_t ): List*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>780</x>
      <y>330</y>
      <w>882</w>
      <h>630</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>240.0;10.0;1450.0;10.0;1450.0;950.0;10.0;950.0;10.0;1030.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>864</x>
      <y>1332</y>
      <w>300</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>LinkedList
--
tail: LinkedListNode*
head: LinkedListNode*
size: uint32_t
maxSize: uint32_t
allocator: Allocator*
--
+ LinkedList( size: uint32_t, maxSize: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>324</y>
      <w>150</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Iterator
--
+ reset( ): void
+ next( ): void*
+ hasNext( ): Boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>144</x>
      <y>348</y>
      <w>588</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt; creates</panel_attributes>
    <additional_attributes>10.0;20.0;960.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>714</x>
      <y>1062</y>
      <w>120</w>
      <h>282</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>180.0;10.0;180.0;330.0;10.0;330.0;10.0;450.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>846</x>
      <y>1062</y>
      <w>186</w>
      <h>282</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;280.0;290.0;280.0;290.0;450.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>726</x>
      <y>1062</y>
      <w>18</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>240</x>
      <y>576</y>
      <w>222</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>SynchronousQueue
--
queue: Queue*
--
+ SynchronousQueue( queue: Queue* )
+ insert( element: void*, ms: uint32_t ): Boolean
+ remove( ms: uint32_t ): void*
+ peek( ms: uint32_t ): void*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>312</x>
      <y>666</y>
      <w>336</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>LinkedQueue
--
head: LinkedListNode*
tail: LinkedListNode*
absoluteTop: LinkedListNode*
size: uint32_t
limitSize: uint32_t
allocator: Allocator*
--
+ LinkedQueue( initialSize: uint32_t, limitSize: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>474</x>
      <y>546</y>
      <w>18</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>348</x>
      <y>546</y>
      <w>18</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1014</x>
      <y>660</y>
      <w>336</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>LinkedStack
--
head: LinkedListNode*
tail: LinkedListNode*
size: uint32_t
limitSize: uint32_t
allocator: Allocator*
--
+ LinkedStack( initialSize: uint32_t, limitSize: uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1212</x>
      <y>570</y>
      <w>222</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>SynchronousStack
--
stack: Stack*
--
+ SynchronousStack( stack: Stack* )
+ push( element: void*, ms: uint32_t ): Boolean
+ pop( ms: uint32_t ): void*
+ peek( ms: uint32_t ): void*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1320</x>
      <y>540</y>
      <w>18</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1176</x>
      <y>540</y>
      <w>18</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>666</x>
      <y>612</y>
      <w>240</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>SynchronousDeque
--
deque: Deque*
--
+ SynchronousDeque( deque: Deque* )
+ pushTop( element: void*, ms: uint32_t ): Boolean
+ pushBottom( element: void*, ms: uint32_t ): Boolean
+ popTop( ms: uint32_t ): void*
+ popBottom( ms: uint32_t ): void*
+ peekTop( ms: uint32_t ): void*
+ peekBottom( ms: uint32_t ): void*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>774</x>
      <y>576</y>
      <w>18</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>666</x>
      <y>732</y>
      <w>336</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>LinkedDeque
--
head: LinkedListNode*
tail: LinkedListNode*
nodeStack: LinkedStack&lt;LinkedListNode&gt;
size: uint32_t
limitSize: uint32_t
allocator: Allocator*
--
+ LinkedDeque( initialSize: uint32_t, limitSize:uint32_t, allocator: Allocator* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>924</x>
      <y>576</y>
      <w>18</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;260.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>198</x>
      <y>522</y>
      <w>72</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>70.0;160.0;10.0;160.0;10.0;10.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>618</x>
      <y>534</y>
      <w>60</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>80.0;180.0;10.0;180.0;10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1368</x>
      <y>510</y>
      <w>108</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>110.0;140.0;160.0;140.0;160.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>942</x>
      <y>1152</y>
      <w>144</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>SynchronousList
--
list: List*
--
+ SynchronousList( list: List* )</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>864</x>
      <y>1062</y>
      <w>162</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;250.0;70.0;250.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>906</x>
      <y>996</y>
      <w>270</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>300.0;290.0;430.0;290.0;430.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>642</x>
      <y>1218</y>
      <w>30</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>576</x>
      <y>6</y>
      <w>222</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>LinkedListNode
--
element: void*
next: LinkedListNode*
previous: LinkedListNode*
--
+ LinkedListNode( )
+ getNext( ): LinkedListNode*
+ getPrevious( ): LinkedListNode*
+ getAt( depth: uint32_t ): LinkedListNode*
+ getLast( ): LinkedListNode*
+ getData( ): void*
+ setNext( next: LinkedListNode* ): void
+ setPrevious( previous: LinkedListNode* ): void
+ setData( data: void* ): void
+ isCircular( ): Boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>792</x>
      <y>210</y>
      <w>186</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>HashNode
--
key: uint32_t
--
+ getWithKey( key: uint32_t ): HashNode*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>684</x>
      <y>150</y>
      <w>210</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;330.0;60.0;330.0;100.0</additional_attributes>
  </element>
</diagram>
